#pragma once
#include <pybind11/operators.h>

#include "halco/common/geometry.h"

namespace halco {
namespace common GENPYBIND_TAG_HALCO_COMMON {
namespace detail {

template<typename Derived, typename T, size_t EnumSize>
typename IntervalCoordinate<Derived, T, EnumSize>::bound_type IntervalCoordinate<Derived, T, EnumSize>::get(size_t i) const
{
	if (!(i < length())) {
		std::stringstream ss;
		ss << "coordinate index ("
		   << i << ") is out of interval range";
		throw pybind11::index_error(ss.str());
	}
	return bound_type(mMin.toEnum() + i);
}

} // namespace detail
} // namespace common
} // namespace halco
